@page
@model OOOVote.Pages.DetailsModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = Model.Voting.Subject;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="d-flex align-items-baseline">
        <a class="btn btn-light" asp-page="./Index">Назад</a>
        <h4 class="ml-3">@ViewData["Title"]</h4>
    </div>

    <div class="d-flex align-items-center">
        <a class="ml-2 btn btn-light" asp-page="./Edit" asp-route-id="@Model.Voting.Id">Редактировать</a>
    </div>
</div>

<div class="row mb-3">
    <div class="card col-6">
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-4">
                    Тема
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Voting.Subject)
                </dd>
                <dt class="col-sm-4">
                    Описание
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Voting.Description)
                </dd>
                <dt class="col-sm-4">
                    Начало
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Voting.StartDate)
                </dd>
                <dt class="col-sm-4">
                    Окончание
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Voting.EndDate)
                </dd>
                <dt class="col-sm-4">
                    Организация
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Voting.Organization.Name)
                </dd>
            </dl>
        </div>
    </div>
    <div class="card col-6">
        <div class="card-body">
            <h5 class="card-title">Ход голосования</h5>
            @if (DateTime.UtcNow > Model.Voting.EndDate)
            {
                <h3>Голосование завершено</h3>
            }
            else
            {
                <span>До окончания голосования:</span>
                <h3 id="timer"></h3>
                <script>
                var x = setInterval(function () {
                    var countDownDate = new Date(Date.parse("@Model.Voting.EndDate.ToString("o")"));
                    // Get today's date and time
                    var now = new Date().getTime();

                    // Find the distance between now and the count down date
                    var distance = countDownDate - now;

                    // Time calculations for days, hours, minutes and seconds
                    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    // Display the result in the element with id="demo"
                    document.getElementById("timer").innerHTML = days + "д " + hours + "ч "
                        + minutes + "м " + seconds + "с ";

                    // If the count down is finished, write some text
                    if (distance < 0) {
                        clearInterval(x);
                        document.getElementById("timer").innerHTML = "Голосование завершено";
                    }
                }, 1000);
                </script>
            }
            <hr />
            <h5 class="card-title">Повестка голосования</h5>
            <div class="accordion" id="accordionExample">
                @foreach (var item in Model.Voting.VotingOptions)
                {
                    <div class="card">
                        <div class="card-header p-0" id="headingOne">
                            <div class="mb-0">
                                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    @item.Title
                                </button>
                            </div>
                        </div>

                        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                            <div class="card-body">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
                                    <label class="form-check-label" for="inlineRadio1">За</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                    <label class="form-check-label" for="inlineRadio2">Против</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio3" value="option3">
                                    <label class="form-check-label" for="inlineRadio3">Воздерживаюсь</label>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="card col-12">
        <div class="card-body">
            <h5 class="card-title">Чат голосования</h5>
            <div class="row">
                <div class="col-12">
                    <input type="hidden" id="groupInput" value="@Model.Voting.Id.ToString()" class="form-control" />
                    <div class="input-group my-2">
                        <input type="text" id="messageInput" class="form-control" placeholder="Введите сообщение" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <div class="input-group-append">
                            <input type="button" class="btn btn-outline-secondary" value="Отправить" id="sendButton" />
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="row" style="max-height:600px">
                <div class="col-12">
                    <dl id="messagesList">
                        @foreach (var item in Model.Voting.VotingMessages)
                        {
                            <dt>@string.Format("{0} {1}", item.User.LastName, item.User.FirstName)</dt>
                            <dd>@item.Message</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/lib/@@aspnet/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/chat.js"></script>
